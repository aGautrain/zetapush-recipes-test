zms_test template_title {
	import zms_test_setup anonymous_setup;
	zms_add_handler(anonymous, zpRecipeTestCommon::test__template_title, function (result, errors) {
		trace('zpRecipeTestCommon::test__template_title');
		trace('zpRecipeTestCommon::test__template_title>>result', result);
		trace('zpRecipeTestCommon::test__template_title>>errors', errors);
		
		zms_test_success;
	});
	sudo anonymous call zpRecipeTestCommon::test__template_title();
}

zms_test template_recursion {
	import zms_test_setup anonymous_setup;
	zms_add_handler(anonymous, zpRecipeTestCommon::test__template_recursion, function (result, errors) {
		trace('zpRecipeTestCommon::test__template_recursion');
		trace('zpRecipeTestCommon::test__template_recursion>>result', result);
		trace('zpRecipeTestCommon::test__template_recursion>>errors', errors);
		
		assert errors[0].code == 'CYCLIC_OBJECT' 'INVALID_ERROR_CODE';

		zms_test_success;
	});
	sudo anonymous call zpRecipeTestCommon::test__template_recursion();
}


zms_test template_memory {
	import zms_test_setup anonymous_setup;
	zms_add_handler(anonymous, zpRecipeTestCommon::zpServiceApiMacro, 'error', function (error) {
		trace('zpRecipeTestCommon::error', error);

		zms_test_success;
	});
	zms_add_handler(anonymous, zpRecipeTestCommon::test__template_memory, function (result, errors) {
		trace('zpRecipeTestCommon::test__template_memory');
		trace('zpRecipeTestCommon::test__template_memory>>result', result);
		trace('zpRecipeTestCommon::test__template_memory>>errors', errors);

		zms_test_success;
	});
	sudo anonymous call zpRecipeTestCommon::test__template_memory();
}